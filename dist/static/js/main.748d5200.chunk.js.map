{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/AuthActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetail.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/ProjectActions.js","App.js","serviceWorker.js","store/reducers/AuthReducer.js","store/reducers/ProjectReducer.js","store/reducers/RootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","props","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","input","target","setState","value","handleSubmit","event","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","path","component","ProjectDetail","exact","Boolean","window","location","hostname","initState","AuthReducer","action","message","ProjectReducer","error","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.748d5200.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/AuthActions\";\r\n\r\nconst SignedInLinks = ({ signOut, profile }) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => dispatch({ type: \"SIGNUP_SUCCESS\" }))\r\n      .catch(err => dispatch({ type: \"SIGNUP_ERROR\", err }));\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = ({ auth, profile }) => {\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map(item => (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map(project => (\r\n          <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetail = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps.match.params;\r\n  const { projects } = state.firestore.data;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/AuthActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = ({ target: input }) => {\r\n    this.setState({\r\n      [input.id]: input.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    const { email, password } = this.state;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/AuthActions\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handleChange = ({ target: input }) => {\r\n    this.setState({\r\n      [input.id]: input.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { email, password, firstName, lastName } = this.state;\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              value={firstName}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              value={lastName}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/ProjectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handleChange = ({ target: input }) => {\r\n    this.setState({\r\n      [input.id]: input.value\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { title, content } = this.state;\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n              value={content}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n      })\r\n      .then(() => dispatch({ type: \"CREATE_PROJECT\", project }))\r\n      .catch(err => dispatch({ type: \"CREATE_PROJECT_ERROR\", err }));\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetail from \"./components/projects/ProjectDetail\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n          <Route path=\"/project/:id\" component={ProjectDetail} />\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: \"\"\r\n};\r\nconst AuthReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: \"\"\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: \"\"\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","const initState = {\r\n  projects: []\r\n};\r\nconst ProjectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"created project\");\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.error.message);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ProjectReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport ProjectReducer from \"./ProjectReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: AuthReducer,\r\n  project: ProjectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDnmfJXYrXsmjT8Y3F3YpZa7avjtDS5tUs\",\r\n  authDomain: \"mrioplan.firebaseapp.com\",\r\n  databaseURL: \"https://mrioplan.firebaseio.com\",\r\n  projectId: \"mrioplan\",\r\n  storageBucket: \"mrioplan.appspot.com\",\r\n  messagingSenderId: \"529232650662\",\r\n  appId: \"1:529232650662:web:56c235a6c28489040bef67\",\r\n  measurementId: \"G-7V7SL0RPX8\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/RootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { getFirebase, reactReduxFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\n// signin signout are not show even refresh\n// to use first declare attachAuthIsReady: true\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}